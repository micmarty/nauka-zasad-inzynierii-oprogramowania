14 Metodyki
{
	#2
	{
		Pojêcia:
		+ Model cyklu ¿ycia/model wytwarzania
			- OGÓLNA METODA

			- organizuje proces wytwarzania systemu
			- dzieli go na etapy
			- ustanawia granice/kryteria bycia na danym etapie
			- mo¿e sugerowaæ poprawne praktyki wykonania

			Po ludzku:
			Trzyma w ryzach projekt, ustanawia jakie bêd¹ etapy
			i co ka¿dy etap musi zrobiæ, by przejœæ do nastêpnego

			Przyk³ady:
			* model kaskadowy/wodospadowy/klasyczny
			* model V
			* model przyrostowy


		+ Metodyka
			- KONKRETNA METODA

			- bazuje na modelach wytwarzania(na 1 lub kilku)
			- szczegó³owo definiuje etapy itd.
			- zwykle jest promowana przez jak¹œ instytucjê albo autora

			- w swojej KONKRETNOŒCI zawiera:
				* zadania w ekipie
				* dobre praktyki
				* role ludzi
				* jak siê komunikuj¹

			Przyk³ady:
			* PRINCE2
			* Scrum
			* Rational Unified Process(RUP)
	}

	#4
	{
		Dzia³ania w projekcie informatycznym:
		2 ga³êzie:

		(to ma w sumie sens)
		+ dzia³ania techniczne:
			- IW
			- Projektowanie
			- Implementacja
			- Testowanie
			- Utrzymanie
			- Modyfikacje, dodawanie funkcjonalnoœci
			- Wybór narzêdzi i œrodowiska

		(trochê ciê¿ej zapamiêtaæ, ale nadal sensowne)
		+ dzia³ania zarz¹dcze:
			- planowanie
			- zarz¹dzanie bud¿etem, wymaganiami, ludŸmi(motywowanie, dobór, dawanie zadañ)
			- komunikacja z pracownikami, klientem
			- ocenianie, zapewnienie o jakoœci produktu

	}

	#5
	{
		Elementy procesu w metodyce -> obrazek 
		
		!attachment100!

		Co		 (activities)
		Kto		 (roles)
		Kiedy
		Jak		 (guidelines)
		Produkty (artifacts)

	}

	#6
	{
		Kategorie metodyk:
		(2 ga³êzie)
		+ wytwórcze
			- koncentruj¹ siê na deweloperce(programowanie, testowanie)
			- bazuj¹ na modelu wytwarzania lub ich kombinacji
			- definiuj¹ jakie s¹ zadania, role, praktyki, produkty
			- trochê zarz¹dzania mened¿erskiego
				(
					planowanie, 
					kontrola jakoœci, 
					zarz¹dzanie ryzykiem
				)
		+ zarz¹dzania
			- typowo mened¿erski, zarz¹dzanie pe³n¹ gêb¹
			- oderwane od deweloperki
			- raczej uniwersalna, nie tylko do informatycznych projektów

		Problem jest taki, ¿e czasem granice miêdzy tymi dwoma siê zacieraj¹
	}

	#7
	{
		Metodyki wytwarzania:
		- zdyscyplinowane / sterowane planem
			Opieraj¹ siê na planowaniu i zarz¹dzaniu
			Nadaj¹ siê do du¿ych projektów
			Mo¿liwoœæ adaptacji do w³asnych potrzeb(przykrajanie)
			Wiêksza gwarancja jakoœci

		- zwinne / lekkie
			Nastawione na zmiany, elastycznoœæ
			Nadaj¹ siê do ma³ych projektów i zespo³ów
			Nie pasuj¹ do krytycznych/specjalistycznych projektów, ale mog¹ ewoluowaæ
	}

	#8
	{
		Teraz opisy metodyki wytwarzania -> zdyscyplinowanej

		- RUP - Rational Unified Process
				Bardzo rozbudowana, ale da siê j¹ przykrajaæ(tailoring)
				Wytwarzanie jest iteracyjne 
				Oparte o analizê ryzyka
				Du¿o modeli wizualnych, narzêdzi i architektur


				Z czasem powsta³y odmiany tego RUPa ukierunkowane na inne typy
				projektów/ do innych zastosowañ:

				- Enterprise	Unified Process -> EUP
				- Open			Unified Process -> OUP
				- Agile			Unified Process -> AUP

				(samog³oski)!!!!!!

				¯eby dokroiæ sobiê odmianê RUP mo¿na skorzystaæ z
				- Rational Method Composer
				- Eclipse Process Framework


		#DOESN'T REALLY MATTER
		- MSF - Microsoft Solution Framework
				
				Nacisk na narzêdzia MS
				Iteracyjne z cyklami spiralnymi

		- PSP - Personal Software Process

				Samodoskonalenie

		- TSP - Team Software Process	
				
				Planowanie i koordynacja prac
	}

	#14
	{
		Teraz opisy metodyk zwinnych/agile

		Przyk³ady tych metodyk:
		+ Scurm
		+ eXtreme Programming
		+ Kanban
		+ Feature Driven Development

		Cechy wspólne dla wszystkich:
		- dzia³aj¹ iteracyjnie, w ma³ych przyrostach
		- nacisk na siln¹ wspó³pracê
		- bliski kontakt z klientem i dostosowywanie produktu do jego potrzeb na bie¿¹co


	}

	#16
	{
		Agile != cowboycoding -> ba³agan czy brak celu

		Wady/kompromisy w agile:

		- nie prowadzimy dokumentacji, po prostu wspolpracujemy z klientem na biezaco
			pokazujemy mu kolejne wersje softu

		- nie robimy formalnego projektu systemu 
			przez to bedzie go trudniej utrzymac, mozliwa restrukturyzacja

		- nie ma rozdzielacza zadan/kierownika 
			to czlonkowie zespolu maja wieksza samomotywacje i odpowiedzialnosc



	}

	#17
	{
		Najpopularniejsza spoœród Agile:

		Scrum - opiera siê na sprintach

		!attachment101!

		Co dzieñ spotkania na kwadrans:
		1. Co zrobili?
		2. Jakie przeszkody napotkali?
		3. Co zrobi¹?

		Produkt wychodzi z koñcem sprintu

		Product backlog - lista priorytetyzowana featurów od klienta
		Sprint backlog - featury które zrealizuje sie w tym sprincie
	}

	#20
	{
		Pierwsza zwinna spopularyzowana:

		Extreme Programming XP:
		- te¿ krótkie iteracje
		- TDD
		- gra planistyczna -> negocjacje z klientem
		- projekt musi byc jak najprostrszy
		- nacisk na refaktoryzacjê
	}

	#22
	{
		Przyk³adowe obszary zarz¹dzania:

		- udzia³owcami
		- czasem
		- wymaganiami
		- jakoœci¹
		- ryzykiem
		- konfiguracj¹
		- kosztami
		- komunikacj¹
	}

	#23
	{
		opis zarz¹dzania udzia³owcami
		- identyfikacja kim oni s¹
		- utrzymywanie ich zaanga¿owania i dogadywanie sie
		- ustalenie i weryfikacja us³ug
		- zapobieganie scope creep
	}

	#24
	{
		opis zarzadzania czasem
		- identyfikacja zadan i jak miedzy soba sie gryz¹
		- oszacowanie ich czasu potrzebnego
		- zrobienie harmonogramu(punkty kontrolne - Milestones, diagram Gantta czy PERT)

	}

	#25
	{
		opis zarzadzania kosztami
		- identyfikacja posiadanych zasobów(ludzie, kasa, narzêdzia itd)
		- oszacowanie kosztów + poœrednich wydatków
		- nadzór bud¿etu, kontrola wydatków
	}

	#26
	{
		opis zarzadzania zespolem/ludŸmi
		- motywacja
		- organizacja struktury, hierarchi, komunikacji
		- dobór ludzi na podstawie ich kompetencji, mocnych stron
		- atmosfera
		- ble ble ble ble ble
	}

	#27
	{
		opis zarzadzania komunikacj¹
		- przygotowanie narzedzi: slack
		- wymyslenie procedur, uprawnien
		- raportowanie zadañ, obowiazkow, rezultatow pracy odpowiednim osobom
		- dostarczanie informacji o podejmowanych decyzjach
		- zglaszanie problemow np. prze³o¿onym
	}

	#28
	{
		opis zarzadzania konfiguracja
		- nadzor kodu, przypadkow testowych, narzêdzi
	}

	#29
	{
		opis zarzadania jakoscia
		- okreœlenie standardow
		- przeprowadzanie audytów
		- badanie wydajnosci
		- przgl¹dy i inspekcje
		- ogólnie QA
	}

	#30
	{
		opis zarzadzanie ryzykiem
		- identyfikacja ryzyk -> niepo¿¹dane zdzarzenia z negatywnymi konsekwencjami
		- szacowanie ryzyka
		- przeciwdzia³anie
		- nadzór
	}

	#31
	{
		PMBOK - Project Management Body of Knowledge
		metodyka zwinna

		przedstawia te obszary zarz¹dzania wy¿ej wspomniane
		zady z nich jest opisywany jako:
		- jakies artefakty wejœciowe
		- stosowane narzêdzia i metody
		- produkty wytworzone przez proces
	}

	#32 
	{
		PRINCE2 - taka metodyka, standard ustanowiony na projekty rz¹dowe UK

		-definuje jaka jest struktura miedzy ludŸmi:
			reprezentanci, konsultanci, kierownicy itd bleble

		-duze znaczenie ma wizja biznesowa, planowania szczegolnie jakosci, kontrole z gory

		-projekt jest dzielony na etapy i w ten sposob rozliczany

		-du¿o dzia³añ kontrolnych i projakoœciowych + tona dokumentacji
	}

	#33
	{
		ITIL - swiadczenie uslug IT dla biznesu(wiec raczej utrzymanie)

		!attachment102!
	}
}